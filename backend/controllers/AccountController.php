<?php
/**
 * Created by PhpStorm.
 * User: Sam
 * Date: 2017/1/4
 * Time: 下午9:29
 */

namespace backend\controllers;

use app\models\SmsAdmin;
use app\models\SmsAdminNoAuth;
use Yii;
use yii\data\SqlDataProvider;
use yii\web\Controller;
use yii\grid\GridView;

class AccountController extends Controller
{

    public function beforeAction($action)
    {
        if (empty(Yii::$app->user->identity)) {
            return $this->redirect(['/default/login']);
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function init()
    {

    }

    public function actionIndex()
    {
        $orgid = Yii::$app->user->identity->orgid;
        $name =Yii::$app->user->identity->name;
        if ($orgid == 2) {
            $sql = "select id,username,password,orgid from sms_admin ";
            $command = Yii::$app->db->createCommand('SELECT COUNT(*) FROM sms_admin ');
            $count = $command->queryScalar();
        } else {
            $sql = "select id,username,password,orgid from sms_admin where username= '".$name . "'";
            $command = Yii::$app->db->createCommand("SELECT COUNT(*) FROM sms_admin WHERE username= '" .$name . "'" );
            $count = $command->queryScalar();
        }

        $dataProvider = new SqlDataProvider([
            'sql' => $sql,
            'totalCount' => $count,
            'pagination' => [
                'pageSize' => 15,
            ],
            'sort' => [
                'attributes' => [
                    'id',
                ],
            ],
        ]);

        GridView::widget([
            'dataProvider' => $dataProvider,
        ]);

        return $this->render('index', [
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionCreate()
    {
        $model = new SmsAdminNoAuth();
        if (!empty(Yii::$app->request->post())) {
            $params = Yii::$app->request->post();
            $model['passwordRepeat'] = $params['SmsAdminNoAuth']['password'];
            $model->setAttributes([
                'username' => $params['SmsAdminNoAuth']['username'],
                'name' => $params['SmsAdminNoAuth']['username'],
                'password' => md5($params['SmsAdminNoAuth']['password']),
                'orgid' => intval($params['SmsAdminNoAuth']['orgid']),
                'passwordRepeat' => md5($params['SmsAdminNoAuth']['passwordRepeat']),
            ]);
        }

        if (!empty(Yii::$app->request->post()) && $model->save()) {
            Yii::$app->cache->delete('index');
            return $this->redirect(['index']);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    public function actionEdit()
    {
        $id = Yii::$app->request->get('id');
        $model = SmsAdminNoAuth::findOne($id);
        $model['passwordRepeat'] = $model['password'];

        if (!empty(Yii::$app->request->post())) {

            $params = Yii::$app->request->post();
            $model['passwordRepeat'] = $params['SmsAdminNoAuth']['password'];
            $orgid = empty($params['SmsAdminNoAuth']['orgid']) ? 0 : $params['SmsAdminNoAuth']['orgid'];
            $model->username = $params['SmsAdminNoAuth']['username'];
            $model->name = $params['SmsAdminNoAuth']['username'];
            $model->password = md5($params['SmsAdminNoAuth']['password']);
            $model->orgid = intval($orgid);
            $model->passwordRepeat = md5($params['SmsAdminNoAuth']['passwordRepeat']);
        }

        if (!empty(Yii::$app->request->post()) && $model->save()) {
            Yii::$app->cache->delete('index');
            return $this->redirect(['index']);
        } else {
            return $this->render('edit', [
                'model' => $model,
            ]);
        }
    }

    public function actionDelete()
    {
        $query = Yii::$app->request->queryParams;
        $id = $query['id'];
        $data = SmsAdminNoAuth::findOne($id);
        $data->delete();
        Yii::$app->cache->delete('index');
        return $this->redirect(['index']);
    }
}